import 'dart:async';

import 'package:flutter/material.dart';
import 'package:covid19/data/response_data.dart';
import 'package:flutter/services.dart';
// import 'package:latlong/latlong.dart';
// import 'package:map_controller/map_controller.dart';
import 'package:google_maps_flutter/google_maps_flutter.dart';
import 'package:location/location.dart';

final points = [
  [108.3616320518493, -7.668340993525571],
  [108.3586929862806, -7.667746912893283],
  [108.3569990475704, -7.669265056434802],
  [108.3583909323882, -7.671233016503606],
  [108.3573710782129, -7.672023051732704],
  [108.3549119746055, -7.671621070749344],
  [108.3543850302527, -7.67297399595517],
  [108.355191985755, -7.67508896973542],
  [108.3538450023592, -7.676501079906215],
  [108.3533790292402, -7.678414966181637],
  [108.3543970269884, -7.681391959431972],
  [108.3560090695784, -7.682714963459663],
  [108.353820009375, -7.684035960760549],
  [108.3518170145979, -7.683077065933368],
  [108.3507479241439, -7.684813940539947],
  [108.3497750351617, -7.685044998691919],
  [108.3488379474819, -7.682757018048414],
  [108.3415689597406, -7.681356002984872],
  [108.3403350027595, -7.681736027440456],
  [108.3374609988355, -7.685550053175554],
  [108.3360079879902, -7.686487927475357],
  [108.3341339689456, -7.68563699793011],
  [108.3326220855992, -7.685584057128927],
  [108.3320120239018, -7.686549016423696],
  [108.334426040924, -7.687295982167375],
  [108.3340700240591, -7.688951934486283],
  [108.3314789686558, -7.688827953583319],
  [108.3308420318328, -7.690481970118215],
  [108.3298900175556, -7.690884937337048],
  [108.3267510035073, -7.688497041657659],
  [108.3260559942921, -7.685694068616527],
  [108.3245379898776, -7.683316993547605],
  [108.3232860269504, -7.683136995716843],
  [108.3221750524959, -7.684594068908865],
  [108.3224469598632, -7.686102048347825],
  [108.3237160356067, -7.686842012126136],
  [108.3243759486039, -7.688461004461851],
  [108.3226289359403, -7.691421022421173],
  [108.3247450189403, -7.691628013893355],
  [108.3239329562854, -7.693582029040362],
  [108.3209150065451, -7.692723988390271],
  [108.3190320318262, -7.693314982518846],
  [108.3170250034367, -7.693108010814591],
  [108.3168660269981, -7.690867974133506],
  [108.3158360227276, -7.689764052072143],
  [108.3144700434165, -7.690681056284547],
  [108.3152120299039, -7.692925010971472],
  [108.3169890181686, -7.695433013389536],
  [108.3164600373454, -7.697001023086321],
  [108.3178079869572, -7.699120038594563],
  [108.3226349652801, -7.700871985211601],
  [108.3235778819138, -7.701932986381943],
  [108.323912946205, -7.703635962111397],
  [108.3234059590616, -7.708800030490153],
  [108.3241059910229, -7.714207984855275],
  [108.326349345819, -7.714673993073749],
  [108.3287359845085, -7.712922986163841],
  [108.3293179667796, -7.709741034409778],
  [108.3311500074225, -7.710377009708642],
  [108.3318340119415, -7.711542999583894],
  [108.331904968794, -7.713997977116495],
  [108.3307459540343, -7.716251038662428],
  [108.3281639888523, -7.718150991815573],
  [108.3243280378492, -7.720108128740777],
  [108.3220149442254, -7.71697193172735],
  [108.3208650683344, -7.714338020327284],
  [108.3195410072821, -7.71542801320614],
  [108.3198749810986, -7.717217079184284],
  [108.3187180216572, -7.719168985639211],
  [108.3189249720181, -7.720655058862169],
  [108.3214669748437, -7.721618966988046],
  [108.3218010813116, -7.72360100727894],
  [108.3206420449389, -7.725725004622406],
  [108.3190628646565, -7.726124974089432],
  [108.3170210276917, -7.724604970749558],
  [108.3140229674042, -7.723918044836586],
  [108.3128729987723, -7.724685944060415],
  [108.3135330328307, -7.726196998779904],
  [108.3142610453561, -7.730637005538739],
  [108.3154519412645, -7.733594075339882],
  [108.3179920196387, -7.738368013891915],
  [108.3166029685748, -7.742793982201386],
  [108.317474010007, -7.745103009880145],
  [108.3161699236757, -7.746451008082966],
  [108.316390912156, -7.748971045625388],
  [108.3178339957102, -7.749668998623884],
  [108.3202610241499, -7.748543984123606],
  [108.3211020717802, -7.748678014909696],
  [108.3225826456504, -7.751309118166083],
  [108.3227710067228, -7.753845177328516],
  [108.3240621063747, -7.757972482163575],
  [108.3215581620945, -7.758884660231495],
  [108.3209850889853, -7.759979962154795],
  [108.3234390102387, -7.761965456058584],
  [108.3239437658094, -7.765312266907043],
  [108.3230589097148, -7.768282092835821],
  [108.32421557068, -7.770109784139803],
  [108.3252006090427, -7.775170599815771],
  [108.3252515021684, -7.778277655731642],
  [108.3235580108655, -7.782944318729315],
  [108.3226260303214, -7.7839700997734],
  [108.3196424334569, -7.784482706933121],
  [108.3180850439118, -7.786431398045075],
  [108.3195740558429, -7.787719655830044],
  [108.3217898225761, -7.788043680150658],
  [108.3234526839812, -7.790464228224156],
  [108.323752767424, -7.795606297569098],
  [108.3246644661206, -7.796124443519603],
  [108.3271923402869, -7.795625556247749],
  [108.3305689527561, -7.798178090961246],
  [108.3293905176744, -7.80202467454674],
  [108.3293496592019, -7.803820444289247],
  [108.3307064951215, -7.804852750145024],
  [108.3353880033452, -7.806332571460331],
  [108.3395634688138, -7.809825632066854],
  [108.3393210941837, -7.811802487302282],
  [108.3398905868834, -7.812783942184147],
  [108.3391363561785, -7.815269533824997],
  [108.3406804105444, -7.817590666057037],
  [108.3425189987411, -7.818003905277919],
  [108.343196167072, -7.820102539707856],
  [108.3445133661864, -7.818805434450753],
  [108.3487895631734, -7.818172447467764],
  [108.3496718746848, -7.817403354441219],
  [108.3519179406793, -7.81707316886304],
  [108.3528574194594, -7.81636180633072],
  [108.3546083731055, -7.816989622837043],
  [108.3572721191433, -7.816575953133251],
  [108.3585472392994, -7.817387264165767],
  [108.3597864317559, -7.817050732320077],
  [108.3627039607118, -7.817456291921539],
  [108.3645115172017, -7.815946986173477],
  [108.3662313041788, -7.81696188716952],
  [108.3676043604087, -7.815923245862539],
  [108.3693608376043, -7.815675979540941],
  [108.3711112826968, -7.814094551851381],
  [108.3750268022192, -7.813631167825569],
  [108.3764446445518, -7.814629810689473],
  [108.3776576606681, -7.813877039686621],
  [108.3788174031166, -7.814744964491287],
  [108.3803606272819, -7.814094651748691],
  [108.3821700829125, -7.814579272745423],
  [108.3904942869242, -7.815319384875266],
  [108.3925029270661, -7.816163837155807],
  [108.3938275372882, -7.815971177970562],
  [108.3960957352199, -7.81671679966305],
  [108.3975356034588, -7.816496148591076],
  [108.4005250847443, -7.81691624569546],
  [108.4031168703688, -7.816516173360439],
  [108.4041624163249, -7.817254234125183],
  [108.4093401574745, -7.817400809356876],
  [108.4133017418323, -7.818816646019746],
  [108.4155449633523, -7.818959502047513],
  [108.4166764138836, -7.819769794792335],
  [108.4220664878991, -7.820491360440308],
  [108.4259383980263, -7.820127658598444],
  [108.4301619428731, -7.82107154376525],
  [108.4327220319739, -7.821158858989201],
  [108.4339212522057, -7.820305393714429],
  [108.4359804110467, -7.81997360709523],
  [108.4366532647367, -7.820508498265186],
  [108.4412802528663, -7.82106655846218],
  [108.4420905849136, -7.82028960977857],
  [108.4457599301354, -7.820439039126765],
  [108.4476171023959, -7.81902283500719],
  [108.4487905839002, -7.814706949710503],
  [108.4503462411046, -7.812793956497385],
  [108.454617576429, -7.810926016479522],
  [108.4616578723985, -7.810322872722145],
  [108.4653904157331, -7.809610030277532],
  [108.4676489631064, -7.80881061110745],
  [108.4686684835705, -7.807127431939707],
  [108.473406445021, -7.806754280483792],
  [108.4740763470227, -7.805993139710643],
  [108.4759709062029, -7.805914790703521],
  [108.4781832368868, -7.804822119060255],
  [108.4797378914234, -7.80305122616523],
  [108.4817765065983, -7.802654295367479],
  [108.4827553533273, -7.801746726518766],
  [108.4833102070613, -7.799038530025224],
  [108.4857945681942, -7.797350839803869],
  [108.4898492628117, -7.796581620728293],
  [108.4940309501836, -7.794039145726401],
  [108.4959864559088, -7.793584448497053],
  [108.4977215502921, -7.791905552508601],
  [108.4981592405529, -7.789863731604467],
  [108.5006495286517, -7.788339146645589],
  [108.4998557888652, -7.787557169133406],
  [108.5006078603165, -7.785257757778683],
  [108.5017886907939, -7.784236536019966],
  [108.5019270519042, -7.781188220505357],
  [108.5043385454579, -7.778415556519011],
  [108.5032663501832, -7.777896350118279],
  [108.5031997870331, -7.776382373277224],
  [108.5045616677691, -7.773504016045283],
  [108.5054305940423, -7.770706987712517],
  [108.505323443481, -7.769364931612326],
  [108.506285228678, -7.766044511058716],
  [108.5078348874019, -7.763786808311862],
  [108.5068926933934, -7.758381097356297],
  [108.5058392293137, -7.757822280922191],
  [108.5055957169316, -7.75581947224177],
  [108.506187678154, -7.754223272504044],
  [108.5039421523405, -7.748712511519504],
  [108.5026518004631, -7.749627920948424],
  [108.500895877817, -7.749000706234916],
  [108.4994386449255, -7.749307579213925],
  [108.4980999765449, -7.747646253330862],
  [108.4976521046415, -7.745545411224184],
  [108.4979083338246, -7.742344007803784],
  [108.4971633670293, -7.741108682951072],
  [108.4983727278801, -7.736037035412997],
  [108.4995550670158, -7.733102883019165],
  [108.5027989172619, -7.72936302281956],
  [108.5042427489536, -7.728424578308079],
  [108.5032422046165, -7.727357063156324],
  [108.50238215561, -7.724410939782665],
  [108.5030621543467, -7.72071907162424],
  [108.5025624678224, -7.718506173520181],
  [108.5018350852194, -7.717682109963649],
  [108.5024526088913, -7.712532825574165],
  [108.503449689988, -7.710099688338494],
  [108.5077195411688, -7.705485762995386],
  [108.5089793639882, -7.704924799343136],
  [108.5131165365137, -7.701668187540669],
  [108.5149267247797, -7.699870979370505],
  [108.5168185493388, -7.698760973153583],
  [108.5210603073381, -7.697493109393263],
  [108.5263601237269, -7.695519927011296],
  [108.5298146691209, -7.69462282966183],
  [108.5320426739343, -7.693595494948231],
  [108.5361976643002, -7.692607915628948],
  [108.538793386811, -7.692656298965346],
  [108.5387089133766, -7.691717268034353],
  [108.5441343540395, -7.690307667587806],
  [108.5500739649915, -7.689376566735127],
  [108.5615059883664, -7.687228690111287],
  [108.5671578767799, -7.686440891132156],
  [108.5687769337518, -7.686679626147932],
  [108.5729660735285, -7.686034244077926],
  [108.5778344562862, -7.685592601338726],
  [108.5807107704171, -7.684651238941873],
  [108.58212351277, -7.684922238920131],
  [108.5893070803472, -7.684161562149818],
  [108.5943760993175, -7.684309562896656],
  [108.6020366889506, -7.683981771046772],
  [108.6030533499246, -7.684358101908206],
  [108.6060132147939, -7.684032660553502],
  [108.616804729336, -7.685168805646068],
  [108.6218217855792, -7.684995758890462],
  [108.6267669080525, -7.686099236696633],
  [108.6307060173185, -7.686429485385588],
  [108.6348567129252, -7.68751414530511],
  [108.6415907310687, -7.688326014586233],
  [108.6445437682074, -7.690121422907428],
  [108.6462080943904, -7.691741154358571],
  [108.6488552059003, -7.693160613731973],
  [108.6532079565532, -7.69654616016849],
  [108.6552059013002, -7.699412422316976],
  [108.6557650865651, -7.701044023809828],
  [108.6556533446844, -7.703489811784417],
  [108.6550011452804, -7.705779617474795],
  [108.6537752580018, -7.705459768388958],
  [108.6515350674361, -7.707717286873508],
  [108.650774150385, -7.709371511026086],
  [108.648475420922, -7.710174445986986],
  [108.6503568022873, -7.712285323334223],
  [108.6494198944588, -7.715935212841252],
  [108.6509470131024, -7.716798677427184],
  [108.6511570294461, -7.718310998967921],
  [108.6565505711626, -7.721752153596889],
  [108.6584508600258, -7.722276942581036],
  [108.6595262020719, -7.723493122537799],
  [108.6620638865879, -7.723573640130772],
  [108.6625579570843, -7.724700099820419],
  [108.6644102087933, -7.725253973707853],
  [108.6646267866587, -7.726600709191525],
  [108.6660839859887, -7.72746401739429],
  [108.6694082119102, -7.728466756539607],
  [108.6698006950545, -7.73092436099221],
  [108.6714940387369, -7.730103702778846],
  [108.6711757264095, -7.728839736996886],
  [108.6717119789556, -7.726246973781661],
  [108.6742853940658, -7.726240747693116],
  [108.6744930172383, -7.724109969964596],
  [108.6753156471067, -7.722385047351333],
  [108.6773380745403, -7.722972877391296],
  [108.678068067252, -7.722160085619809],
  [108.6768001962371, -7.719039676264623],
  [108.6757404398166, -7.718046327969064],
  [108.6760313224931, -7.716242346914067],
  [108.6729010631105, -7.714326485628849],
  [108.6705838837216, -7.7120896980635],
  [108.6689181409549, -7.709985030139698],
  [108.6657823806772, -7.707451360070969],
  [108.6621063302513, -7.705282602372701],
  [108.6590643338016, -7.704458302669646],
  [108.6584791376757, -7.702963808526507],
  [108.6586994130329, -7.700480803374998],
  [108.6598061309371, -7.697575315842331],
  [108.6610461435433, -7.695495582058582],
  [108.6636430417396, -7.692239488707537],
  [108.6698236808348, -7.687469347135836],
  [108.6720897489458, -7.685238688155007],
  [108.6736878392699, -7.68671808003123],
  [108.6749536458844, -7.685385739023049],
  [108.6746019457829, -7.683937017969309],
  [108.6797374693418, -7.681169212513661],
  [108.6829953760872, -7.679828461543375],
  [108.6892099717243, -7.677872248719546],
  [108.6929132425299, -7.677509516717212],
  [108.6962735927022, -7.676724014021743],
  [108.6986474829699, -7.676755866200997],
  [108.704319981277, -7.676642599769103],
  [108.7066108037547, -7.677264660323551],
  [108.7092330998511, -7.677095699475299],
  [108.7203504551155, -7.678993294568097],
  [108.7238218338814, -7.680734744698137],
  [108.7257025761565, -7.680947987153511],
  [108.7267770685725, -7.681754832482279],
  [108.7304397008023, -7.682742771192039],
  [108.7325031338256, -7.683770071042906],
  [108.7332568128694, -7.682693080465166],
  [108.7348910064439, -7.683744410839644],
  [108.7402132141427, -7.685532627821554],
  [108.7424839767971, -7.687484115460279],
  [108.744694156397, -7.687746849673545],
  [108.7501279809371, -7.689759165971939],
  [108.7541926619738, -7.693437155592784],
  [108.7565410784674, -7.694776764876846],
  [108.7590836582352, -7.695668962550566],
  [108.7610085949268, -7.695707719318641],
  [108.7623942031355, -7.696642883984046],
  [108.7650257538536, -7.69491603254852],
  [108.7658365264109, -7.693550363659005],
  [108.7649297816645, -7.692206774482768],
  [108.7654963034162, -7.691323348523063],
  [108.7683028043908, -7.691033033681915],
  [108.76939172144, -7.692545394226094],
  [108.7707635281404, -7.692684064131692],
  [108.7714143381143, -7.691152347391268],
  [108.7730845610918, -7.690383756250176],
  [108.7760795090202, -7.690506516404239],
  [108.7775951507994, -7.691798657580995],
  [108.776635884826, -7.693695003188019],
  [108.777660418925, -7.695838399551017],
  [108.7772084101461, -7.699322820589398],
  [108.779505594962, -7.701408012590266],
  [108.7822233373239, -7.699214773967649],
  [108.7866391468644, -7.694893029421617],
  [108.7893335559505, -7.693207150187442],
  [108.7907759813115, -7.692934289223279],
  [108.7945708239589, -7.693129007481097],
  [108.7981688989916, -7.690589780797319],
  [108.7982082019262, -7.689784128411015],
  [108.7943729410177, -7.683808119865299],
  [108.7941756356036, -7.681179324293074],
  [108.7948491723403, -7.680061594670797],
  [108.7990981698483, -7.677673315241355],
  [108.8013681307157, -7.674788245312096],
  [108.8012022225731, -7.673317432899614],
  [108.7992807420451, -7.667470990937259],
  [108.7977220250848, -7.666987440542474],
  [108.7954990268125, -7.669180992200868],
  [108.7918500598709, -7.670372827119925],
  [108.789640192355, -7.670015602625759],
  [108.7874768263236, -7.669053335653095],
  [108.7860086563397, -7.667835237163021],
  [108.7848521070308, -7.665062324326295],
  [108.7858311576517, -7.66022517772271],
  [108.7854460166553, -7.659228821374904],
  [108.78302208044, -7.658351674395993],
  [108.780172731676, -7.658612617226397],
  [108.7787039486179, -7.657524204434263],
  [108.7784214529819, -7.653458790081023],
  [108.7766044338538, -7.65262798326372],
  [108.7745984966706, -7.654779306348136],
  [108.7732944542843, -7.655377835157971],
  [108.7709114641338, -7.65497641627152],
  [108.7667631929333, -7.652144777077076],
  [108.7647806457629, -7.649799908006183],
  [108.7643643551047, -7.646468794109582],
  [108.7638907434222, -7.645817841453204],
  [108.7601265529166, -7.644198690154347],
  [108.7593891973689, -7.64191244189152],
  [108.7576605861747, -7.64077940826482],
  [108.7552797516779, -7.639988841423908],
  [108.7549823193418, -7.638820005602818],
  [108.7556903229685, -7.636100008356741],
  [108.7552187652197, -7.635059966713214],
  [108.7515795969524, -7.63443578127262],
  [108.7474616709125, -7.634154935988651],
  [108.746602607138, -7.632594078698793],
  [108.7478951244201, -7.623587615398839],
  [108.7472165156623, -7.62068748662363],
  [108.7456632649415, -7.619209488656455],
  [108.7412408526293, -7.619143203376131],
  [108.740596588096, -7.617972560349296],
  [108.7413967540451, -7.614215500602423],
  [108.7400576185629, -7.613257399347271],
  [108.7352309854164, -7.615869371622699],
  [108.7329795196374, -7.615252338087792],
  [108.7319534693242, -7.612480099074284],
  [108.7326074764758, -7.61179180331024],
  [108.7350775313435, -7.61206411620813],
  [108.7363367339546, -7.611724838199503],
  [108.7373496571202, -7.609663675150264],
  [108.7375530030462, -7.603958046747403],
  [108.7383840883804, -7.60235853611306],
  [108.7410805666443, -7.600993384466934],
  [108.7416126032624, -7.598748057821863],
  [108.7404679509755, -7.593770351955649],
  [108.7410823973763, -7.59234687123671],
  [108.7436896497663, -7.591236371549204],
  [108.7453333636332, -7.591979862843115],
  [108.7472302390189, -7.594064877232116],
  [108.7503180223256, -7.592265103279765],
  [108.7507158738749, -7.590797243915628],
  [108.7491772393822, -7.588111543184459],
  [108.7490593121634, -7.585776358296461],
  [108.7520540260853, -7.58518659326575],
  [108.7521910487537, -7.583847078537511],
  [108.751167344937, -7.580599316392811],
  [108.7513180550064, -7.576622665274593],
  [108.7488513068739, -7.575745255579993],
  [108.7477743948966, -7.574399469059729],
  [108.7495645108, -7.571987682723547],
  [108.7494449910084, -7.56995511770711],
  [108.7486313524353, -7.568005434624789],
  [108.7487706236328, -7.566847125338883],
  [108.7532669786713, -7.560904172244383],
  [108.7548788891125, -7.559399314652843],
  [108.753722873072, -7.556583216740103],
  [108.7515699707104, -7.553718751253835],
  [108.7507272912514, -7.549002016055337],
  [108.7513543300855, -7.545114277025871],
  [108.7479248707834, -7.543154290256727],
  [108.7445133003463, -7.540585965860069],
  [108.7439204916454, -7.537859242922429],
  [108.7442389441186, -7.534964285561097],
  [108.7435171984255, -7.532020737302679],
  [108.7417952704144, -7.529677288702126],
  [108.7393956631552, -7.524260825080864],
  [108.7372908007234, -7.518373626424191],
  [108.7375746252495, -7.513792430774718],
  [108.7365506028402, -7.510631167824105],
  [108.7358369594378, -7.506131297807739],
  [108.7339520508179, -7.501798320274187],
  [108.7328246697359, -7.500440209161696],
  [108.7272519554561, -7.494805865822447],
  [108.7256155656579, -7.49272225814781],
  [108.7229824637033, -7.49059025808072],
  [108.7207770011873, -7.489584503114351],
  [108.7193724460906, -7.484605528910462],
  [108.717614413043, -7.480921694253802],
  [108.7177143597817, -7.478371516270097],
  [108.7203243151795, -7.473893224394745],
  [108.7201621550267, -7.471730774142023],
  [108.7181103091402, -7.469421856934016],
  [108.7143915330317, -7.470358899153733],
  [108.7122453559036, -7.470280295807621],
  [108.7110829669012, -7.469639479099564],
  [108.7076925338745, -7.469298332610086],
  [108.7082146007132, -7.471590017069225],
  [108.7061177451428, -7.477244906078459],
  [108.7049551886063, -7.475498432836933],
  [108.7033197289449, -7.474440244337108],
  [108.7018813657467, -7.474708595253397],
  [108.7009091050235, -7.473604450038318],
  [108.6992221265301, -7.473509804764181],
  [108.6992349978309, -7.471262047821505],
  [108.698281259806, -7.465718697741184],
  [108.6995396340708, -7.464576835776542],
  [108.6989299433339, -7.461901050303088],
  [108.6949943155022, -7.461877255469885],
  [108.6933382103272, -7.461358533460678],
  [108.6904876165277, -7.461396604472221],
  [108.6886030827329, -7.462453085302821],
  [108.6873181744193, -7.461072998040629],
  [108.6834110990214, -7.460939748191775],
  [108.6828685816556, -7.462843316672398],
  [108.6809364597902, -7.464527974997079],
  [108.6770579386239, -7.464075877610013],
  [108.6750306370525, -7.462719585196593],
  [108.6711140443009, -7.46165358633519],
  [108.6696292612563, -7.460930230035253],
  [108.6675918416494, -7.464183178251145],
  [108.6659476500761, -7.464008030257077],
  [108.6654080805854, -7.465344362547541],
  [108.663708427665, -7.465019083084117],
  [108.6626616811202, -7.46651556329045],
  [108.6624045175009, -7.46950376995634],
  [108.6613815799057, -7.469588354655466],
  [108.657469766157, -7.468680803555374],
  [108.6538302702045, -7.468463260744009],
  [108.6508734266573, -7.467724924435677],
  [108.6487151185523, -7.46788734096862],
  [108.6481611638314, -7.469256189058518],
  [108.6477328607032, -7.472468461171305],
  [108.6476852712002, -7.477060821581993],
  [108.6461862106182, -7.478988184400017],
  [108.6474742472674, -7.482083652258915],
  [108.6481691768, -7.482539282049972],
  [108.6515791274187, -7.483021416791102],
  [108.65095817329, -7.485381648898139],
  [108.6510519709946, -7.487185197409536],
  [108.65356700217, -7.489968963568623],
  [108.6561148149294, -7.491166624207686],
  [108.6557869164801, -7.493848615790146],
  [108.6565472558701, -7.498143154982069],
  [108.6584691602286, -7.503457338459835],
  [108.659241761667, -7.503838086213481],
  [108.6588495232971, -7.50667333777489],
  [108.6596699774435, -7.509389419020263],
  [108.6596265160473, -7.512958822845093],
  [108.6579852518646, -7.513797139753424],
  [108.6579334912807, -7.517063759809877],
  [108.6573880791035, -7.52177838990746],
  [108.6560462363452, -7.523052888709256],
  [108.6553356841674, -7.524727626086873],
  [108.6536641962995, -7.526687979599014],
  [108.6529559851823, -7.528319634002962],
  [108.6531089596327, -7.530130181918954],
  [108.6523995131612, -7.53321700056131],
  [108.6501934302608, -7.53420072488447],
  [108.6491745251856, -7.535335835808326],
  [108.6480549953539, -7.538584055353264],
  [108.646612634902, -7.540278498051016],
  [108.643588815195, -7.540701741863733],
  [108.6414563879571, -7.542059004300395],
  [108.6389315576708, -7.54197498132106],
  [108.636267415796, -7.54244911727408],
  [108.6339555555795, -7.543486111130724],
  [108.6331657530541, -7.544576153600011],
  [108.6315654948346, -7.545043034776391],
  [108.6284245233772, -7.544751229967295],
  [108.6275015618505, -7.545244694067557],
  [108.6256480693904, -7.548832875133568],
  [108.6222350504306, -7.550872708606143],
  [108.6212546431554, -7.551821785286828],
  [108.6190661134584, -7.553946370668532],
  [108.6179240148612, -7.554263520884661],
  [108.6131734533107, -7.553780542884507],
  [108.6100160100607, -7.554266756682731],
  [108.6055673899352, -7.556123663882355],
  [108.6028635248626, -7.558154418259373],
  [108.6015196216212, -7.559747619082722],
  [108.5976635077351, -7.562083790388268],
  [108.59491880715, -7.562036351181225],
  [108.5930276705555, -7.563156697313151],
  [108.5915616042984, -7.562641587843753],
  [108.5907203659953, -7.563990517957942],
  [108.5894754119885, -7.564175433012849],
  [108.5835335504533, -7.56281360722729],
  [108.5821118032882, -7.564260359169457],
  [108.580043525665, -7.564890368902379],
  [108.5788484407587, -7.565837470308001],
  [108.5751317523413, -7.566642410147983],
  [108.5710297397914, -7.565879040351708],
  [108.5693741426237, -7.566288106222066],
  [108.5674430241713, -7.565844587200097],
  [108.5645596236029, -7.566047475359929],
  [108.5635117001452, -7.566613087552132],
  [108.5607790191806, -7.566578534624453],
  [108.5578479142664, -7.569215732267656],
  [108.5562356503374, -7.572294246805747],
  [108.5534025081513, -7.574213547108935],
  [108.5510791147939, -7.574133589559513],
  [108.5472201993335, -7.572653914137304],
  [108.544830148724, -7.571933158739959],
  [108.5414792531038, -7.571819892005487],
  [108.5390312001545, -7.573401739446261],
  [108.5360644344049, -7.57387430271296],
  [108.5338350226679, -7.574691535235254],
  [108.5313252103799, -7.573945998776505],
  [108.5277790279492, -7.57391537277655],
  [108.5270100325892, -7.573263690915235],
  [108.5260950769366, -7.571163270706654],
  [108.5240247640876, -7.568772646918925],
  [108.5235687947386, -7.566739985108455],
  [108.5244356162057, -7.564369253337839],
  [108.5233186218137, -7.563365924370691],
  [108.5223025962691, -7.561363093831974],
  [108.5217494616366, -7.556607209727739],
  [108.5231408382248, -7.553662332227724],
  [108.5215856609351, -7.551277088980308],
  [108.5232863020879, -7.548614918810099],
  [108.5223559011092, -7.547141505001937],
  [108.5218133159918, -7.543822767786857],
  [108.5240334996982, -7.542271440798148],
  [108.5249572387629, -7.540682936663496],
  [108.5276892980385, -7.538040626162516],
  [108.5310772668812, -7.537520282566486],
  [108.5324213506624, -7.536305278839737],
  [108.5345218309117, -7.535534489362332],
  [108.5309059087073, -7.531124759103365],
  [108.5277424460282, -7.528627493976097],
  [108.5265491596649, -7.52659799135256],
  [108.5226104658227, -7.525508890960769],
  [108.5208728458048, -7.523789077784238],
  [108.5185775310889, -7.52443057690572],
  [108.5162458902933, -7.52443888332913],
  [108.5150802864267, -7.525550359666138],
  [108.5136761371684, -7.525338290568156],
  [108.512244927028, -7.526483301490632],
  [108.5111255779927, -7.525621014229738],
  [108.5096702422497, -7.526950783383908],
  [108.5076464759352, -7.526965481154269],
  [108.5068053137665, -7.525568712814879],
  [108.5051583029174, -7.526771263541995],
  [108.5015766572847, -7.527634814707591],
  [108.500317363996, -7.528683548458992],
  [108.4978274192181, -7.528767826666865],
  [108.497764984639, -7.53100291733523],
  [108.4952031602016, -7.531732203856222],
  [108.4937770325208, -7.530802096650828],
  [108.4912929732875, -7.530604546996753],
  [108.4902970961766, -7.529574332667128],
  [108.4853888889751, -7.528491666842236],
  [108.4824984366463, -7.5263765992359],
  [108.4806426416503, -7.525668428941255],
  [108.4753791207753, -7.521472904146293],
  [108.4709369804122, -7.519527759365047],
  [108.4677086155801, -7.518449050230911],
  [108.4648475801718, -7.516626027961568],
  [108.4632302003857, -7.516511482064042],
  [108.4607148839511, -7.517228968035516],
  [108.4575826257031, -7.515667240382338],
  [108.456516756668, -7.510549522625403],
  [108.4550224541651, -7.506389917354078],
  [108.4530764541678, -7.503590119215526],
  [108.4500764251963, -7.502807601122104],
  [108.4468389850097, -7.502810298932139],
  [108.4444056912475, -7.50440256087999],
  [108.4407405141364, -7.50496913705041],
  [108.4387572602705, -7.504531831777137],
  [108.4336151803964, -7.505028640555373],
  [108.432918060741, -7.504849060589436],
  [108.4278521331948, -7.501382807833153],
  [108.4270800387437, -7.500570990309427],
  [108.4274330950247, -7.497756014585868],
  [108.4230809378474, -7.493939969912214],
  [108.4190560095304, -7.493322953591037],
  [108.4196559851121, -7.491525975807662],
  [108.4187571798535, -7.490011386712041],
  [108.4147483265051, -7.490729200458564],
  [108.415572113512, -7.492328053241632],
  [108.414542945221, -7.493327984737757],
  [108.413409952582, -7.496498018236397],
  [108.4096372320501, -7.49683267698609],
  [108.4106268441647, -7.494356796457673],
  [108.4086216912572, -7.492951021237102],
  [108.4070514248763, -7.493446969111151],
  [108.4072850198294, -7.489192581228306],
  [108.4042265268869, -7.485875320389026],
  [108.4022031276484, -7.486286939435933],
  [108.4013735092676, -7.48402130930419],
  [108.4023839167281, -7.482076988099371],
  [108.4000117518865, -7.47936754007517],
  [108.3899647914276, -7.480087936348985],
  [108.3816264755805, -7.479698174955985],
  [108.3810792468757, -7.479236690637265],
  [108.3750712121772, -7.478775993853164],
  [108.3720977389956, -7.47947625426634],
  [108.367400166166, -7.483472792743518],
  [108.3612582223956, -7.485723420195063],
  [108.3563100829382, -7.490757574255376],
  [108.3520280755952, -7.498018047382089],
  [108.3396917750795, -7.494817728852725],
  [108.3383956699227, -7.499645760342027],
  [108.3343014232697, -7.507488214351305],
  [108.3344428075944, -7.510573138768644],
  [108.3337719588567, -7.512845957061534],
  [108.33337795334, -7.515930977149803],
  [108.3347930414685, -7.519869003163706],
  [108.3344660312368, -7.522959942439096],
  [108.3347980245853, -7.52510501351588],
  [108.3358589931137, -7.525388009701326],
  [108.3363200234365, -7.528277037739805],
  [108.3344629979483, -7.529468035600379],
  [108.334722042952, -7.530732984787456],
  [108.3340369374966, -7.534354947521232],
  [108.3341670133342, -7.535940012549823],
  [108.333357987575, -7.537602017452825],
  [108.3335829391083, -7.540299973388045],
  [108.3345819794719, -7.542361028918229],
  [108.333791968965, -7.545011056851163],
  [108.3341050422122, -7.547620021861015],
  [108.3331850126115, -7.548625985728221],
  [108.3338989995795, -7.550719005814068],
  [108.3359990261084, -7.552003054222469],
  [108.3384360213387, -7.55262105660244],
  [108.3396610617531, -7.554081983617982],
  [108.3408459813097, -7.55326598639633],
  [108.3422729879416, -7.554303973112988],
  [108.3440499555592, -7.554893989555471],
  [108.3444511159834, -7.556550009052582],
  [108.34769303617, -7.55791396991278],
  [108.3478508775739, -7.55953002447489],
  [108.3495660328328, -7.560269987053121],
  [108.3505979642235, -7.559919032847144],
  [108.352514004278, -7.561833067691803],
  [108.3545850157924, -7.566525976902218],
  [108.3548909371566, -7.567813990851795],
  [108.3546130369261, -7.570795957301362],
  [108.3564210720554, -7.571854039564167],
  [108.3549309838416, -7.574237063415916],
  [108.3560480399559, -7.575691995980842],
  [108.3571529077891, -7.579402960106314],
  [108.3561860234966, -7.581506017221749],
  [108.3566890453557, -7.582801014240888],
  [108.3555149482076, -7.585253978576381],
  [108.356671980026, -7.587905967535555],
  [108.3558650511843, -7.59128602705581],
  [108.3573850040531, -7.592828980630797],
  [108.3578610070676, -7.595392989796361],
  [108.3599640283704, -7.598872976774764],
  [108.3612500295773, -7.600076976046686],
  [108.3593810289003, -7.600812942539075],
  [108.3584799592666, -7.605280009765016],
  [108.3588110117293, -7.607854976006447],
  [108.3599950270595, -7.606932985023147],
  [108.3609879379669, -7.605154975783388],
  [108.3622650062821, -7.605244961010637],
  [108.364550010875, -7.606450970655148],
  [108.367290971157, -7.608572056348233],
  [108.3659760818598, -7.609279968635403],
  [108.3640889884493, -7.607714003550539],
  [108.3627120058421, -7.609062981739012],
  [108.3659779560099, -7.611688061085968],
  [108.3636281117522, -7.612898946804883],
  [108.3615908878814, -7.611702924363337],
  [108.3605740265591, -7.612033990269906],
  [108.3592690161145, -7.613760037707344],
  [108.3607680019366, -7.615371995983404],
  [108.3588810069729, -7.616619003204228],
  [108.3595989856545, -7.6178150391888],
  [108.3628070236777, -7.620448929240562],
  [108.3646060592993, -7.621569968734637],
  [108.3642490547483, -7.623294029563617],
  [108.3629699432646, -7.623541010928417],
  [108.3613510272012, -7.622519990668597],
  [108.3614340380874, -7.621197023935054],
  [108.3595650457664, -7.620732991861868],
  [108.3574580121382, -7.6226849595914],
  [108.3580830265231, -7.630132061071384],
  [108.3583329530014, -7.635062921433082],
  [108.3553419536477, -7.636852966568421],
  [108.3547289858889, -7.638120006352034],
  [108.3556050041122, -7.639739930515144],
  [108.355160012086, -7.641890037821302],
  [108.35610401121, -7.642865045627733],
  [108.3599029764088, -7.643146062021289],
  [108.3621000307889, -7.644128997603477],
  [108.3621739915347, -7.646131056286214],
  [108.3608229550487, -7.648103978000953],
  [108.3620629861808, -7.650156990178854],
  [108.3610379506243, -7.651679000244254],
  [108.3607420582057, -7.654261068782516],
  [108.3611900442084, -7.655145946680131],
  [108.3633419970279, -7.656343011230435],
  [108.3638909545668, -7.658457026159107],
  [108.3662449848337, -7.658362924895985],
  [108.3663459468152, -7.659484010913245],
  [108.365257966436, -7.660963001145129],
  [108.3621849957994, -7.661913048778592],
  [108.361402967337, -7.662596958548789],
  [108.3603079633896, -7.665065979859291],
  [108.3623110335722, -7.665981989851169],
  [108.3616320518493, -7.668340993525571]
];

class MCovidMapsScreen extends StatefulWidget {
  final ResponseData data;

  MCovidMapsScreen({this.data});

  @override
  _MCovidMapsScreenState createState() => _MCovidMapsScreenState();
}

class _MCovidMapsScreenState extends State<MCovidMapsScreen> {
  // MapController mapController;
  // StatefulMapController statefulMapController;
  // StreamSubscription<StatefulMapControllerStateChange> sub;

  GoogleMapController mapController;

  Map<MarkerId, Marker> markers = <MarkerId, Marker>{};
  Map<PolygonId, Polygon> polygons = <PolygonId, Polygon>{};

  Map<String, bool> filterSetting = {
    'MNG.png': true,
    'odp2.png': true,
    'otg.png': true,
    'otgp.png': true,
    'pdp.png': true,
    'positif.png': true,
    'SBH.png': true,
    'SP.png': true,
    'SPe.png': true
  };

  MarkerId selectedMarker;

  Location location = Location();
  LocationData currentLocation;
  bool _serviceEnabled;
  PermissionStatus _permissionGranted;

  int statusLocation = 0;
  List<LatLng> pointsGeoLocMarker = [];

  static final CameraPosition _kGooglePlex = CameraPosition(
    target: LatLng(-7.635672, 108.550500),
    zoom: 10.0,
  );

  void _onMapCreated(GoogleMapController controller) {
    mapController = controller;
  }

  @override
  void initState() {
    // mapController = MapController();
    // statefulMapController = StatefulMapController(mapController: mapController);

    // // wait for the controller to be ready before using it
    // statefulMapController.onReady
    //     .then((_) => print("The map controller is ready"));

    // /// [Important] listen to the changefeed to rebuild the map on changes:
    // /// this will rebuild the map when for example addMarker or any method
    // /// that mutates the map assets is called
    // sub = statefulMapController.changeFeed.listen((change) => setState(() {}));

    // Map<String, Marker> markers = Map();

    // statefulMapController.addMarkers(markers: markers);

    setMarkerAndPolygon();
    // _getLocation(true);

    // statefulMapController.addPolygon(
    //   name: 'Pangandaran',
    //   points: pointsGeo,
    //   color: Colors.transparent,
    //   borderColor: Colors.grey,
    //   borderWidth: 1.0,
    // );

    super.initState();
  }

  Future<void> updateStateSetting(Map<String, bool> newFilterSetting) async {

    filterSetting = newFilterSetting;

    await this.setMarkerAndPolygon(onlyMarker: true);

    setState(() {
    });
  }

  Future<bool> _showDialog() async {
    // flutter defined function
    return await showDialog(
      context: context,
      builder: (BuildContext context) {
        // return object of type Dialog
        return AlertDialog(
          title: new Text("Fitur Lokasi"),
          content: new Text(
              "Anda bisa mengaktifkan lokasi untuk menikmati beberapa fitur tambahan yang hanya bisa dilakukan ketika lokasi aktif. Lokasi anda tidak akan dikirimkan ke server dan semua operasi dilakukan secara lokal."),
          actions: <Widget>[
            new FlatButton(
              child: new Text(
                "Batal",
                style: TextStyle(color: Colors.red),
              ),
              onPressed: () {
                Navigator.of(context).pop(false);
              },
            ),
            new FlatButton(
              child: new Text("Setuju"),
              onPressed: () {
                Navigator.of(context).pop(true);
              },
            ),
          ],
        );
      },
    );
  }

  void _getLocation(bool isAutomatic) async {
    _serviceEnabled = await location.serviceEnabled();
    if (!_serviceEnabled) {
      _serviceEnabled = await location.requestService();
      if (!_serviceEnabled) {
        return;
      }
    }

    _permissionGranted = await location.hasPermission();
    if (_permissionGranted == PermissionStatus.denied) {
      final bool returnDialog = await _showDialog();
      if (returnDialog == true) {
        _permissionGranted = await location.requestPermission();
        if (_permissionGranted != PermissionStatus.granted) {
          return;
        }
      } else {
        return;
      }
    }

    try {

      if (currentLocation == null) {
        currentLocation = await location.getLocation();
      }

      mapController.animateCamera(CameraUpdate.newLatLngZoom(
          LatLng(currentLocation.latitude, currentLocation.longitude), 14.0));

      setState(
          () {}); //rebuild the widget after getting the current location of the user
    } on Exception {
      currentLocation = null;
    }
  }

  Future<void> setMarkerAndPolygon({onlyMarker = false}) async {
    Map<MarkerId, Marker> markersTmp = <MarkerId, Marker>{};
    Map<PolygonId, Polygon> polygonsTmp = <PolygonId, Polygon>{};

    var i = 0;

    markersTmp.clear();

    for (var e in widget.data.data.maps) {
      final String image = e[2].toString().split('/')[5];

      if (filterSetting.containsKey(image) == false ||
          filterSetting[image] == false) {
        continue;
      }

      final MarkerId markerId = MarkerId(i.toString());
      final LatLng f = LatLng(e[0], e[1]);

      if (image == 'positif.png') {
        pointsGeoLocMarker.add(f);
      }

      markersTmp[markerId] = Marker(
        markerId: markerId,
        position: f,
        // infoWindow: InfoWindow(title: 'marker_$i', snippet: '*'),
        icon: await BitmapDescriptor.fromAssetImage(
            ImageConfiguration(
              size: Size(48, 48),
            ),
            'assets/markers/' + image),
      );

      i++;
    }

    if (!onlyMarker) {
      List<LatLng> pointsGeo = [];

      points.forEach((element) {
        pointsGeo.add(LatLng(element[1], element[0]));
      });

      PolygonId polyGon = PolygonId('pangandaran_kab');

      polygonsTmp[polyGon] = Polygon(
        polygonId: polyGon,
        points: pointsGeo,
        consumeTapEvents: false,
        strokeColor: Colors.black54,
        strokeWidth: 1,
        fillColor: Colors.transparent,
      );
    }

    setState(() {
      markers = markersTmp;
      if (!onlyMarker) {
        polygons = polygonsTmp;
      }
    });
  }

  @override
  Widget build(BuildContext context) {
    return AnnotatedRegion<SystemUiOverlayStyle>(
      value: SystemUiOverlayStyle(
        statusBarColor: Colors.transparent,
        systemNavigationBarColor: Colors.black,
        statusBarIconBrightness: Brightness.dark,
        systemNavigationBarIconBrightness: Brightness.dark,
      ),
      child: Scaffold(
        appBar: null,
        floatingActionButton: Stack(
          children: <Widget>[
            Positioned(
              bottom: 80.0,
              right: 10.0,
              child: FloatingActionButton(
                heroTag: 'filter',
                onPressed: () async {
                  await showDialog(
                    context: context,
                    builder: (BuildContext context) {
                      return MyDialogFilter(
                        filterSetting: filterSetting,
                        updateState: updateStateSetting,
                      );
                    },
                  );
                },
                child: Icon(Icons.filter_list),
              ),
            ),
            Positioned(
              bottom: 10.0,
              right: 10.0,
              child: FloatingActionButton(
                heroTag: 'location',
                onPressed: () {
                  _getLocation(false);
                },
                child: Icon(Icons.location_searching),
              ),
            ),
          ],
        ),
        body: Container(
          width: double.infinity,
          height: double.infinity,
          child: Stack(
            children: <Widget>[
              GoogleMap(
                initialCameraPosition: _kGooglePlex,
                mapType: MapType.normal,
                minMaxZoomPreference: MinMaxZoomPreference(10.0, 18.0),
                cameraTargetBounds: CameraTargetBounds(LatLngBounds(southwest: LatLng(-7.862237, 108.279880), northeast: LatLng(-7.439627, 108.827137))),
                rotateGesturesEnabled: false,
                zoomControlsEnabled: false,
                onMapCreated: _onMapCreated,
                myLocationEnabled: true,
                myLocationButtonEnabled: false,
                markers: Set<Marker>.of(markers.values),
                polygons: Set<Polygon>.of(polygons.values),
                mapToolbarEnabled: false,
              ),
              // FlutterMap(
              //   options: MapOptions(
              //       center: LatLng(-7.635672, 108.550500),
              //       zoom: 10.0,
              //       maxZoom: 18.0,
              //       minZoom: 10.0,
              //       plugins: [
              //         MarkerClusterPlugin(),
              //       ]),
              //   mapController: mapController,
              //   layers: [
              //     TileLayerOptions(
              //       urlTemplate:
              //           "https://maps.wikimedia.org/osm-intl/{z}/{x}/{y}.png",
              //     ),
              //     PolylineLayerOptions(polylines: statefulMapController.lines),
              //     PolygonLayerOptions(polygons: statefulMapController.polygons),
              //     MarkerClusterLayerOptions(
              //       maxClusterRadius: 120,
              //       size: Size(40, 40),
              //       fitBoundsOptions: FitBoundsOptions(
              //         padding: EdgeInsets.all(50),
              //       ),
              //       markers: statefulMapController.markers,
              //       polygonOptions: PolygonOptions(
              //           borderColor: Colors.blueAccent,
              //           color: Colors.black12,
              //           borderStrokeWidth: 3),
              //       builder: (context, markers) {
              //         return FloatingActionButton(
              //           child: Text(markers.length.toString()),
              //           onPressed: null,
              //         );
              //       },
              //     ),
              //   ],
              // ),
              // SafeArea(
              //   child: Container(
              //     margin: EdgeInsets.all(10.0),
              //     child: createStatusWidget(),
              //   ),
              // )
            ],
          ),
        ),
      ),
    );
  }

  @override
  void dispose() {
    // sub.cancel();
    super.dispose();
  }
}

class MyDialogFilter extends StatefulWidget {
  final Map<String, bool> filterSetting;
  final Function updateState;

  MyDialogFilter({Key key, this.filterSetting, this.updateState});

  @override
  _MyDialogFilterState createState() => _MyDialogFilterState();
}

class _MyDialogFilterState extends State<MyDialogFilter> {
  @override
  Widget build(BuildContext context) {
    return Dialog(
      child: Column(
        mainAxisSize: MainAxisSize.min,
        children: <Widget>[
          Container(
            child: ListView(
              shrinkWrap: true,
              children: <Widget>[
                CheckboxListTile(
                  value: widget.filterSetting['odp2.png'],
                  onChanged: (bool status) {
                    setState(() {
                      widget.filterSetting['odp2.png'] = status;
                    });
                  },
                  title: Text('ODP (Proses)'),
                ),
                CheckboxListTile(
                  value: widget.filterSetting['SP.png'],
                  onChanged: (bool status) {
                    setState(() {
                      widget.filterSetting['SP.png'] = status;
                    });
                  },
                  title: Text('ODP (Selesai)'),
                ),
                CheckboxListTile(
                  value: widget.filterSetting['SPe.png'],
                  onChanged: (bool status) {
                    setState(() {
                      widget.filterSetting['SPe.png'] = status;
                    });
                  },
                  title: Text('PDP (Proses)'),
                ),
                CheckboxListTile(
                  value: widget.filterSetting['pdp.png'],
                  onChanged: (bool status) {
                    setState(() {
                      widget.filterSetting['pdp.png'] = status;
                    });
                  },
                  title: Text('PDP (Selesai)'),
                ),
                CheckboxListTile(
                  value: widget.filterSetting['positif.png'],
                  onChanged: (bool status) {
                    setState(() {
                      widget.filterSetting['positif.png'] = status;
                    });
                  },
                  title: Text('Positif'),
                ),
                CheckboxListTile(
                  value: widget.filterSetting['SBH.png'],
                  onChanged: (bool status) {
                    setState(() {
                      widget.filterSetting['SBH.png'] = status;
                    });
                  },
                  title: Text('Positif (Sembuh)'),
                ),
                CheckboxListTile(
                  value: widget.filterSetting['MNG.png'],
                  onChanged: (bool status) {
                    setState(() {
                      widget.filterSetting['MNG.png'] = status;
                    });
                  },
                  title: Text('Positif (Meninggal)'),
                ),
                CheckboxListTile(
                  value: widget.filterSetting['otg.png'],
                  onChanged: (bool status) {
                    setState(() {
                      widget.filterSetting['otg.png'] = status;
                    });
                  },
                  title: Text('OTG (Proses)'),
                ),
                CheckboxListTile(
                  value: widget.filterSetting['otgp.png'],
                  onChanged: (bool status) {
                    setState(() {
                      widget.filterSetting['otgp.png'] = status;
                    });
                  },
                  title: Text('OTG (Selesai)'),
                ),
              ],
            ),
          ),
          Divider(),
          FlatButton.icon(onPressed: () async {
            await widget.updateState(widget.filterSetting);

            Navigator.of(context).pop();
          }, icon: Icon(Icons.save), label: Text('Simpan'))
        ],
      ),
    );
  }
}
